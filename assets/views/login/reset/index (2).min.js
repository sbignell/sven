"use strict";exports.init=function(a,b){a.isAuthenticated()?b.redirect(a.user.defaultReturnUrl()):b.render("login/reset/index")},exports.set=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.body.password||(c.outcome.errfor.password="required"),a.body.confirm||(c.outcome.errfor.confirm="required"),a.body.password!==a.body.confirm&&c.outcome.errors.push("Passwords do not match."),c.hasErrors()?c.emit("response"):void c.emit("findUser")}),c.on("findUser",function(){var b={email:a.params.email,resetPasswordExpires:{$gt:Date.now()}};a.app.db.models.User.findOne(b,function(b,d){return b?c.emit("exception",b):d?void a.app.db.models.User.validatePassword(a.params.token,d.resetPasswordToken,function(a,b){return a?c.emit("exception",a):b?void c.emit("patchUser",d):(c.outcome.errors.push("Invalid request."),c.emit("response"))}):(c.outcome.errors.push("Invalid request."),c.emit("response"))})}),c.on("patchUser",function(b){a.app.db.models.User.encryptPassword(a.body.password,function(d,e){if(d)return c.emit("exception",d);var f={password:e,resetPasswordToken:""};a.app.db.models.User.findByIdAndUpdate(b._id,f,function(a){return a?c.emit("exception",a):void c.emit("response")})})}),c.emit("validate")};
//# sourceMappingURL=index%20(2).min.js.map