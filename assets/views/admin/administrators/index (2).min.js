"use strict";exports.find=function(a,b,c){a.query.search=a.query.search?a.query.search:"",a.query.limit=a.query.limit?parseInt(a.query.limit,null):20,a.query.page=a.query.page?parseInt(a.query.page,null):1,a.query.sort=a.query.sort?a.query.sort:"_id";var d={};a.query.search&&(d.search=new RegExp("^.*?"+a.query.search+".*$","i")),a.app.db.models.Admin.pagedFind({filters:d,keys:"name.full",limit:a.query.limit,page:a.query.page,sort:a.query.sort},function(d,e){return d?c(d):void(a.xhr?(b.header("Cache-Control","no-cache, no-store, must-revalidate"),e.filters=a.query,b.send(e)):(e.filters=a.query,b.render("admin/administrators/index",{data:{results:escape(JSON.stringify(e))}})))})},exports.read=function(a,b,c){var d={},e=function(b){a.app.db.models.AdminGroup.find({},"name").sort("name").exec(function(a,c){return a?b(a,null):(d.adminGroups=c,b(null,"done"))})},f=function(b){a.app.db.models.Admin.findById(a.params.id).populate("groups","name").exec(function(a,c){return a?b(a,null):(d.record=c,b(null,"done"))})},g=function(e){return e?c(e):void(a.xhr?b.send(d.record):b.render("admin/administrators/details",{data:{record:escape(JSON.stringify(d.record)),adminGroups:d.adminGroups}}))};require("async").parallel([e,f],g)},exports.create=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.body["name.full"]?void c.emit("createAdministrator"):(c.outcome.errors.push("Please enter a name."),c.emit("response"))}),c.on("createAdministrator",function(){var b=a.body["name.full"].trim().split(/\s/),d={name:{first:b.shift(),middle:b.length>1?b.shift():"",last:0===b.length?"":b.join(" ")}};d.name.full=d.name.first+(d.name.last?" "+d.name.last:""),d.search=[d.name.first,d.name.middle,d.name.last],a.app.db.models.Admin.create(d,function(a,b){return a?c.emit("exception",a):(c.outcome.record=b,c.emit("response"))})}),c.emit("validate")},exports.update=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.body.first||(c.outcome.errfor.first="required"),a.body.last||(c.outcome.errfor.last="required"),c.hasErrors()?c.emit("response"):void c.emit("patchAdministrator")}),c.on("patchAdministrator",function(){var b={name:{first:a.body.first,middle:a.body.middle,last:a.body.last,full:a.body.first+" "+a.body.last},search:[a.body.first,a.body.middle,a.body.last]};a.app.db.models.Admin.findByIdAndUpdate(a.params.id,b,function(a,b){return a?c.emit("exception",a):void b.populate("groups","name",function(a,b){return a?c.emit("exception",a):(c.outcome.admin=b,void c.emit("response"))})})}),c.emit("validate")},exports.groups=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.user.roles.admin.isMemberOf("root")?a.body.groups?void c.emit("patchAdministrator"):(c.outcome.errfor.groups="required",c.emit("response")):(c.outcome.errors.push("You may not change the group memberships of admins."),c.emit("response"))}),c.on("patchAdministrator",function(){var b={groups:a.body.groups};a.app.db.models.Admin.findByIdAndUpdate(a.params.id,b,function(a,b){return a?c.emit("exception",a):void b.populate("groups","name",function(a,b){return a?c.emit("exception",a):(c.outcome.admin=b,void c.emit("response"))})})}),c.emit("validate")},exports.permissions=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.user.roles.admin.isMemberOf("root")?a.body.permissions?void c.emit("patchAdministrator"):(c.outcome.errfor.permissions="required",c.emit("response")):(c.outcome.errors.push("You may not change the permissions of admins."),c.emit("response"))}),c.on("patchAdministrator",function(){var b={permissions:a.body.permissions};a.app.db.models.Admin.findByIdAndUpdate(a.params.id,b,function(a,b){return a?c.emit("exception",a):void b.populate("groups","name",function(a,b){return a?c.emit("exception",a):(c.outcome.admin=b,void c.emit("response"))})})}),c.emit("validate")},exports.linkUser=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.user.roles.admin.isMemberOf("root")?a.body.newUsername?void c.emit("verifyUser"):(c.outcome.errfor.newUsername="required",c.emit("response")):(c.outcome.errors.push("You may not link admins to users."),c.emit("response"))}),c.on("verifyUser",function(){a.app.db.models.User.findOne({username:a.body.newUsername},"username").exec(function(b,d){return b?c.emit("exception",b):d?d.roles&&d.roles.admin&&d.roles.admin!==a.params.id?(c.outcome.errors.push("User is already linked to a different admin."),c.emit("response")):(c.user=d,void c.emit("duplicateLinkCheck")):(c.outcome.errors.push("User not found."),c.emit("response"))})}),c.on("duplicateLinkCheck",function(){a.app.db.models.Admin.findOne({"user.id":c.user._id,_id:{$ne:a.params.id}}).exec(function(a,b){return a?c.emit("exception",a):b?(c.outcome.errors.push("Another admin is already linked to that user."),c.emit("response")):void c.emit("patchUser")})}),c.on("patchUser",function(){a.app.db.models.User.findByIdAndUpdate(c.user._id,{"roles.admin":a.params.id}).exec(function(a){return a?c.emit("exception",a):void c.emit("patchAdministrator")})}),c.on("patchAdministrator",function(){a.app.db.models.Admin.findByIdAndUpdate(a.params.id,{user:{id:c.user._id,name:c.user.username}}).exec(function(a,b){return a?c.emit("exception",a):void b.populate("groups","name",function(a,b){return a?c.emit("exception",a):(c.outcome.admin=b,void c.emit("response"))})})}),c.emit("validate")},exports.unlinkUser=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.user.roles.admin.isMemberOf("root")?a.user.roles.admin._id===a.params.id?(c.outcome.errors.push("You may not unlink yourself from admin."),c.emit("response")):void c.emit("patchAdministrator"):(c.outcome.errors.push("You may not unlink users from admins."),c.emit("response"))}),c.on("patchAdministrator",function(){a.app.db.models.Admin.findById(a.params.id).exec(function(a,b){if(a)return c.emit("exception",a);if(!b)return c.outcome.errors.push("Administrator was not found."),c.emit("response");var d=b.user.id;b.user={id:void 0,name:""},b.save(function(a,b){return a?c.emit("exception",a):void b.populate("groups","name",function(a,b){return a?c.emit("exception",a):(c.outcome.admin=b,void c.emit("patchUser",d))})})})}),c.on("patchUser",function(b){a.app.db.models.User.findById(b).exec(function(a,b){return a?c.emit("exception",a):b?(b.roles.admin=void 0,void b.save(function(a){return a?c.emit("exception",a):void c.emit("response")})):(c.outcome.errors.push("User was not found."),c.emit("response"))})}),c.emit("validate")},exports["delete"]=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.user.roles.admin.isMemberOf("root")?a.user.roles.admin._id===a.params.id?(c.outcome.errors.push("You may not delete your own admin record."),c.emit("response")):void c.emit("deleteAdministrator"):(c.outcome.errors.push("You may not delete admins."),c.emit("response"))}),c.on("deleteAdministrator",function(){a.app.db.models.Admin.findByIdAndRemove(a.params.id,function(a){return a?c.emit("exception",a):void c.emit("response")})}),c.emit("validate")};
//# sourceMappingURL=index%20(2).min.js.map