"use strict";exports.find=function(a,b,c){var d={},e=function(b){a.app.db.models.Status.find({pivot:"Account"},"name").sort("name").exec(function(a,c){return a?b(a,null):(d.statuses=c,b(null,"done"))})},f=function(b){a.query.search=a.query.search?a.query.search:"",a.query.status=a.query.status?a.query.status:"",a.query.limit=a.query.limit?parseInt(a.query.limit,null):20,a.query.page=a.query.page?parseInt(a.query.page,null):1,a.query.sort=a.query.sort?a.query.sort:"_id";var c={};a.query.search&&(c.search=new RegExp("^.*?"+a.query.search+".*$","i")),a.query.status&&(c["status.id"]=a.query.status),a.app.db.models.Account.pagedFind({filters:c,keys:"name company phone zip userCreated status",limit:a.query.limit,page:a.query.page,sort:a.query.sort},function(a,c){return a?b(a,null):(d.results=c,b(null,"done"))})},g=function(e){return e?c(e):void(a.xhr?(b.header("Cache-Control","no-cache, no-store, must-revalidate"),d.results.filters=a.query,b.send(d.results)):(d.results.filters=a.query,b.render("admin/accounts/index",{data:{results:escape(JSON.stringify(d.results)),statuses:d.statuses}})))};require("async").parallel([e,f],g)},exports.read=function(a,b,c){var d={},e=function(b){a.app.db.models.Status.find({pivot:"Account"},"name").sort("name").exec(function(a,c){return a?b(a,null):(d.statuses=c,b(null,"done"))})},f=function(b){a.app.db.models.Account.findById(a.params.id).exec(function(a,c){return a?b(a,null):(d.record=c,b(null,"done"))})},g=function(e){return e?c(e):void(a.xhr?b.send(d.record):b.render("admin/accounts/details",{data:{record:escape(JSON.stringify(d.record)),statuses:d.statuses}}))};require("async").parallel([e,f],g)},exports.create=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.body["name.full"]?void c.emit("createAccount"):(c.outcome.errors.push("Please enter a name."),c.emit("response"))}),c.on("createAccount",function(){var b=a.body["name.full"].trim().split(/\s/),d={name:{first:b.shift(),middle:b.length>1?b.shift():"",last:0===b.length?"":b.join(" ")},userCreated:{id:a.user._id,name:a.user.username,time:(new Date).toISOString()}};d.name.full=d.name.first+(d.name.last?" "+d.name.last:""),d.search=[d.name.first,d.name.middle,d.name.last],a.app.db.models.Account.create(d,function(a,b){return a?c.emit("exception",a):(c.outcome.record=b,c.emit("response"))})}),c.emit("validate")},exports.update=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.body.first||(c.outcome.errfor.first="required"),a.body.last||(c.outcome.errfor.last="required"),c.hasErrors()?c.emit("response"):void c.emit("patchAccount")}),c.on("patchAccount",function(){var b={name:{first:a.body.first,middle:a.body.middle,last:a.body.last,full:a.body.first+" "+a.body.last},company:a.body.company,phone:a.body.phone,zip:a.body.zip,search:[a.body.first,a.body.middle,a.body.last,a.body.company,a.body.phone,a.body.zip]};a.app.db.models.Account.findByIdAndUpdate(a.params.id,b,function(a,b){return a?c.emit("exception",a):(c.outcome.account=b,c.emit("response"))})}),c.emit("validate")},exports.linkUser=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.user.roles.admin.isMemberOf("root")?a.body.newUsername?void c.emit("verifyUser"):(c.outcome.errfor.newUsername="required",c.emit("response")):(c.outcome.errors.push("You may not link accounts to users."),c.emit("response"))}),c.on("verifyUser",function(){a.app.db.models.User.findOne({username:a.body.newUsername}).exec(function(b,d){return b?c.emit("exception",b):d?d.roles&&d.roles.account&&d.roles.account!==a.params.id?(c.outcome.errors.push("User is already linked to a different account."),c.emit("response")):(c.user=d,void c.emit("duplicateLinkCheck")):(c.outcome.errors.push("User not found."),c.emit("response"))})}),c.on("duplicateLinkCheck",function(){a.app.db.models.Account.findOne({"user.id":c.user._id,_id:{$ne:a.params.id}}).exec(function(a,b){return a?c.emit("exception",a):b?(c.outcome.errors.push("Another account is already linked to that user."),c.emit("response")):void c.emit("patchUser")})}),c.on("patchUser",function(){a.app.db.models.User.findByIdAndUpdate(c.user._id,{"roles.account":a.params.id}).exec(function(a){return a?c.emit("exception",a):void c.emit("patchAccount")})}),c.on("patchAccount",function(){a.app.db.models.Account.findByIdAndUpdate(a.params.id,{user:{id:c.user._id,name:c.user.username}}).exec(function(a,b){return a?c.emit("exception",a):(c.outcome.account=b,void c.emit("response"))})}),c.emit("validate")},exports.unlinkUser=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.user.roles.admin.isMemberOf("root")?void c.emit("patchAccount"):(c.outcome.errors.push("You may not unlink users from accounts."),c.emit("response"))}),c.on("patchAccount",function(){a.app.db.models.Account.findById(a.params.id).exec(function(a,b){if(a)return c.emit("exception",a);if(!b)return c.outcome.errors.push("Account was not found."),c.emit("response");var d=b.user.id;b.user={id:void 0,name:""},b.save(function(a,b){return a?c.emit("exception",a):(c.outcome.account=b,void c.emit("patchUser",d))})})}),c.on("patchUser",function(b){a.app.db.models.User.findById(b).exec(function(a,b){return a?c.emit("exception",a):b?(b.roles.account=void 0,void b.save(function(a){return a?c.emit("exception",a):void c.emit("response")})):(c.outcome.errors.push("User was not found."),c.emit("response"))})}),c.emit("validate")},exports.newNote=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.body.data?void c.emit("addNote"):(c.outcome.errors.push("Data is required."),c.emit("response"))}),c.on("addNote",function(){var b={data:a.body.data,userCreated:{id:a.user._id,name:a.user.username,time:(new Date).toISOString()}};a.app.db.models.Account.findByIdAndUpdate(a.params.id,{$push:{notes:b}},function(a,b){return a?c.emit("exception",a):(c.outcome.account=b,c.emit("response"))})}),c.emit("validate")},exports.newStatus=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.body.id||c.outcome.errors.push("Please choose a status."),c.hasErrors()?c.emit("response"):void c.emit("addStatus")}),c.on("addStatus",function(){var b={id:a.body.id,name:a.body.name,userCreated:{id:a.user._id,name:a.user.username,time:(new Date).toISOString()}};a.app.db.models.Account.findByIdAndUpdate(a.params.id,{status:b,$push:{statusLog:b}},function(a,b){return a?c.emit("exception",a):(c.outcome.account=b,c.emit("response"))})}),c.emit("validate")},exports["delete"]=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.user.roles.admin.isMemberOf("root")?void c.emit("deleteAccount"):(c.outcome.errors.push("You may not delete accounts."),c.emit("response"))}),c.on("deleteAccount",function(){a.app.db.models.Account.findByIdAndRemove(a.params.id,function(a,b){return a?c.emit("exception",a):(c.outcome.account=b,void c.emit("response"))})}),c.emit("validate")};
//# sourceMappingURL=index%20(2).min.js.map