"use strict";exports.find=function(a,b,c){a.query.name=a.query.name?a.query.name:"",a.query.limit=a.query.limit?parseInt(a.query.limit,null):20,a.query.page=a.query.page?parseInt(a.query.page,null):1,a.query.sort=a.query.sort?a.query.sort:"_id";var d={};a.query.name&&(d.name=new RegExp("^.*?"+a.query.name+".*$","i")),a.app.db.models.AdminGroup.pagedFind({filters:d,keys:"name",limit:a.query.limit,page:a.query.page,sort:a.query.sort},function(d,e){return d?c(d):void(a.xhr?(b.header("Cache-Control","no-cache, no-store, must-revalidate"),e.filters=a.query,b.send(e)):(e.filters=a.query,b.render("admin/admin-groups/index",{data:{results:escape(JSON.stringify(e))}})))})},exports.read=function(a,b,c){a.app.db.models.AdminGroup.findById(a.params.id).exec(function(d,e){return d?c(d):void(a.xhr?b.send(e):b.render("admin/admin-groups/details",{data:{record:escape(JSON.stringify(e))}}))})},exports.create=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.user.roles.admin.isMemberOf("root")?a.body.name?void c.emit("duplicateAdminGroupCheck"):(c.outcome.errors.push("Please enter a name."),c.emit("response")):(c.outcome.errors.push("You may not create admin groups."),c.emit("response"))}),c.on("duplicateAdminGroupCheck",function(){a.app.db.models.AdminGroup.findById(a.app.utility.slugify(a.body.name)).exec(function(a,b){return a?c.emit("exception",a):b?(c.outcome.errors.push("That group already exists."),c.emit("response")):void c.emit("createAdminGroup")})}),c.on("createAdminGroup",function(){var b={_id:a.app.utility.slugify(a.body.name),name:a.body.name};a.app.db.models.AdminGroup.create(b,function(a,b){return a?c.emit("exception",a):(c.outcome.record=b,c.emit("response"))})}),c.emit("validate")},exports.update=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.user.roles.admin.isMemberOf("root")?a.body.name?void c.emit("patchAdminGroup"):(c.outcome.errfor.name="required",c.emit("response")):(c.outcome.errors.push("You may not update admin groups."),c.emit("response"))}),c.on("patchAdminGroup",function(){var b={name:a.body.name};a.app.db.models.AdminGroup.findByIdAndUpdate(a.params.id,b,function(a,b){return a?c.emit("exception",a):(c.outcome.adminGroup=b,c.emit("response"))})}),c.emit("validate")},exports.permissions=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.user.roles.admin.isMemberOf("root")?a.body.permissions?void c.emit("patchAdminGroup"):(c.outcome.errfor.permissions="required",c.emit("response")):(c.outcome.errors.push("You may not change the permissions of admin groups."),c.emit("response"))}),c.on("patchAdminGroup",function(){var b={permissions:a.body.permissions};a.app.db.models.AdminGroup.findByIdAndUpdate(a.params.id,b,function(a,b){return a?c.emit("exception",a):(c.outcome.adminGroup=b,c.emit("response"))})}),c.emit("validate")},exports["delete"]=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.user.roles.admin.isMemberOf("root")?void c.emit("deleteAdminGroup"):(c.outcome.errors.push("You may not delete admin groups."),c.emit("response"))}),c.on("deleteAdminGroup",function(){a.app.db.models.AdminGroup.findByIdAndRemove(a.params.id,function(a){return a?c.emit("exception",a):void c.emit("response")})}),c.emit("validate")};
//# sourceMappingURL=index%20(2).min.js.map