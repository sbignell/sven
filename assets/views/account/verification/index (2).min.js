"use strict";var sendVerificationEmail=function(a,b,c){a.app.utility.sendmail(a,b,{from:a.app.config.smtp.from.name+" <"+a.app.config.smtp.from.address+">",to:c.email,subject:"Verify Your "+a.app.config.projectName+" Account",textPath:"account/verification/email-text",htmlPath:"account/verification/email-html",locals:{verifyURL:a.protocol+"://"+a.headers.host+"/account/verification/"+c.verificationToken+"/",projectName:a.app.config.projectName},success:function(){c.onSuccess()},error:function(a){c.onError(a)}})};exports.init=function(a,b,c){if("yes"===a.user.roles.account.isVerified)return b.redirect(a.user.defaultReturnUrl());var d=a.app.utility.workflow(a,b);d.on("renderPage",function(){a.app.db.models.User.findById(a.user.id,"email").exec(function(a,d){return a?c(a):void b.render("account/verification/index",{data:{user:JSON.stringify(d)}})})}),d.on("generateTokenOrRender",function(){return""!==a.user.roles.account.verificationToken?d.emit("renderPage"):void d.emit("generateToken")}),d.on("generateToken",function(){var b=require("crypto");b.randomBytes(21,function(b,e){if(b)return c(b);var f=e.toString("hex");a.app.db.models.User.encryptPassword(f,function(a,b){return a?c(a):void d.emit("patchAccount",f,b)})})}),d.on("patchAccount",function(e,f){var g={verificationToken:f};a.app.db.models.Account.findByIdAndUpdate(a.user.roles.account.id,g,function(f){return f?c(f):void sendVerificationEmail(a,b,{email:a.user.email,verificationToken:e,onSuccess:function(){return d.emit("renderPage")},onError:function(a){return c(a)}})})}),d.emit("generateTokenOrRender")},exports.resendVerification=function(a,b,c){if("yes"===a.user.roles.account.isVerified)return b.redirect(a.user.defaultReturnUrl());var d=a.app.utility.workflow(a,b);d.on("validate",function(){return a.body.email?/^[a-zA-Z0-9\-\_\.\+]+@[a-zA-Z0-9\-\_\.]+\.[a-zA-Z0-9\-\_]+$/.test(a.body.email)||(d.outcome.errfor.email="invalid email format"):d.outcome.errfor.email="required",d.hasErrors()?d.emit("response"):void d.emit("duplicateEmailCheck")}),d.on("duplicateEmailCheck",function(){a.app.db.models.User.findOne({email:a.body.email.toLowerCase(),_id:{$ne:a.user.id}},function(a,b){return a?d.emit("exception",a):b?(d.outcome.errfor.email="email already taken",d.emit("response")):void d.emit("patchUser")})}),d.on("patchUser",function(){var b={email:a.body.email.toLowerCase()};a.app.db.models.User.findByIdAndUpdate(a.user.id,b,function(a,b){return a?d.emit("exception",a):(d.user=b,void d.emit("generateToken"))})}),d.on("generateToken",function(){var b=require("crypto");b.randomBytes(21,function(b,e){if(b)return c(b);var f=e.toString("hex");a.app.db.models.User.encryptPassword(f,function(a,b){return a?c(a):void d.emit("patchAccount",f,b)})})}),d.on("patchAccount",function(c,e){var f={verificationToken:e};a.app.db.models.Account.findByIdAndUpdate(a.user.roles.account.id,f,function(e){return e?d.emit("exception",e):void sendVerificationEmail(a,b,{email:d.user.email,verificationToken:c,onSuccess:function(){d.emit("response")},onError:function(a){d.outcome.errors.push("Error Sending: "+a),d.emit("response")}})})}),d.emit("validate")},exports.verify=function(a,b,c){a.app.db.models.User.validatePassword(a.params.token,a.user.roles.account.verificationToken,function(d,e){if(!e)return b.redirect(a.user.defaultReturnUrl());var f={isVerified:"yes",verificationToken:""};a.app.db.models.Account.findByIdAndUpdate(a.user.roles.account._id,f,function(d){return d?c(d):b.redirect(a.user.defaultReturnUrl())})})};
//# sourceMappingURL=index%20(2).min.js.map