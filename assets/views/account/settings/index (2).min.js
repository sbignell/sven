"use strict";var renderSettings=function(a,b,c,d){var e={},f=function(b){a.app.db.models.Account.findById(a.user.roles.account.id,"name company phone zip").exec(function(a,c){return a?b(a,null):(e.account=c,void b(null,"done"))})},g=function(b){a.app.db.models.User.findById(a.user.id,"username email twitter.id github.id facebook.id google.id tumblr.id").exec(function(a,c){return a&&b(a,null),e.user=c,b(null,"done")})},h=function(f){return f?c(f):void b.render("account/settings/index",{data:{account:escape(JSON.stringify(e.account)),user:escape(JSON.stringify(e.user))},oauthMessage:d,oauthTwitter:!!a.app.config.oauth.twitter.key,oauthTwitterActive:e.user.twitter?!!e.user.twitter.id:!1,oauthGitHub:!!a.app.config.oauth.github.key,oauthGitHubActive:e.user.github?!!e.user.github.id:!1,oauthFacebook:!!a.app.config.oauth.facebook.key,oauthFacebookActive:e.user.facebook?!!e.user.facebook.id:!1,oauthGoogle:!!a.app.config.oauth.google.key,oauthGoogleActive:e.user.google?!!e.user.google.id:!1,oauthTumblr:!!a.app.config.oauth.tumblr.key,oauthTumblrActive:e.user.tumblr?!!e.user.tumblr.id:!1})};require("async").parallel([f,g],h)};exports.init=function(a,b,c){renderSettings(a,b,c,"")},exports.connectTwitter=function(a,b,c){a._passport.instance.authenticate("twitter",function(d,e,f){return f&&f.profile?void a.app.db.models.User.findOne({"twitter.id":f.profile.id,_id:{$ne:a.user.id}},function(d,e){return d?c(d):void(e?renderSettings(a,b,c,"Another user has already connected with that Twitter account."):a.app.db.models.User.findByIdAndUpdate(a.user.id,{"twitter.id":f.profile.id},function(a){return a?c(a):void b.redirect("/account/settings/")}))}):b.redirect("/account/settings/")})(a,b,c)},exports.connectGitHub=function(a,b,c){a._passport.instance.authenticate("github",function(d,e,f){return f&&f.profile?void a.app.db.models.User.findOne({"github.id":f.profile.id,_id:{$ne:a.user.id}},function(d,e){return d?c(d):void(e?renderSettings(a,b,c,"Another user has already connected with that GitHub account."):a.app.db.models.User.findByIdAndUpdate(a.user.id,{"github.id":f.profile.id},function(a){return a?c(a):void b.redirect("/account/settings/")}))}):b.redirect("/account/settings/")})(a,b,c)},exports.connectFacebook=function(a,b,c){a._passport.instance.authenticate("facebook",{callbackURL:"/account/settings/facebook/callback/"},function(d,e,f){return f&&f.profile?void a.app.db.models.User.findOne({"facebook.id":f.profile.id,_id:{$ne:a.user.id}},function(d,e){return d?c(d):void(e?renderSettings(a,b,c,"Another user has already connected with that Facebook account."):a.app.db.models.User.findByIdAndUpdate(a.user.id,{"facebook.id":f.profile.id},function(a){return a?c(a):void b.redirect("/account/settings/")}))}):b.redirect("/account/settings/")})(a,b,c)},exports.connectGoogle=function(a,b,c){a._passport.instance.authenticate("google",{callbackURL:"/account/settings/google/callback/"},function(d,e,f){return f&&f.profile?void a.app.db.models.User.findOne({"google.id":f.profile.id,_id:{$ne:a.user.id}},function(d,e){return d?c(d):void(e?renderSettings(a,b,c,"Another user has already connected with that Google account."):a.app.db.models.User.findByIdAndUpdate(a.user.id,{"google.id":f.profile.id},function(a){return a?c(a):void b.redirect("/account/settings/")}))}):b.redirect("/account/settings/")})(a,b,c)},exports.connectTumblr=function(a,b,c){a._passport.instance.authenticate("tumblr",{callbackURL:"/account/settings/tumblr/callback/"},function(d,e,f){return f&&f.profile?(f.profile.hasOwnProperty("id")||(f.profile.id=f.profile.username),void a.app.db.models.User.findOne({"tumblr.id":f.profile.id,_id:{$ne:a.user.id}},function(d,e){return d?c(d):void(e?renderSettings(a,b,c,"Another user has already connected with that Tumblr account."):a.app.db.models.User.findByIdAndUpdate(a.user.id,{"tumblr.id":f.profile.id},function(a){return a?c(a):void b.redirect("/account/settings/")}))})):b.redirect("/account/settings/")})(a,b,c)},exports.disconnectTwitter=function(a,b,c){a.app.db.models.User.findByIdAndUpdate(a.user.id,{twitter:{id:void 0}},function(a){return a?c(a):void b.redirect("/account/settings/")})},exports.disconnectGitHub=function(a,b,c){a.app.db.models.User.findByIdAndUpdate(a.user.id,{github:{id:void 0}},function(a){return a?c(a):void b.redirect("/account/settings/")})},exports.disconnectFacebook=function(a,b,c){a.app.db.models.User.findByIdAndUpdate(a.user.id,{facebook:{id:void 0}},function(a){return a?c(a):void b.redirect("/account/settings/")})},exports.disconnectGoogle=function(a,b,c){a.app.db.models.User.findByIdAndUpdate(a.user.id,{google:{id:void 0}},function(a){return a?c(a):void b.redirect("/account/settings/")})},exports.disconnectTumblr=function(a,b,c){a.app.db.models.User.findByIdAndUpdate(a.user.id,{tumblr:{id:void 0}},function(a){return a?c(a):void b.redirect("/account/settings/")})},exports.update=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.body.first||(c.outcome.errfor.first="required"),a.body.last||(c.outcome.errfor.last="required"),c.hasErrors()?c.emit("response"):void c.emit("patchAccount")}),c.on("patchAccount",function(){var b={name:{first:a.body.first,middle:a.body.middle,last:a.body.last,full:a.body.first+" "+a.body.last},company:a.body.company,phone:a.body.phone,zip:a.body.zip,search:[a.body.first,a.body.middle,a.body.last,a.body.company,a.body.phone,a.body.zip]},d={select:"name company phone zip"};a.app.db.models.Account.findByIdAndUpdate(a.user.roles.account.id,b,d,function(a,b){return a?c.emit("exception",a):(c.outcome.account=b,c.emit("response"))})}),c.emit("validate")},exports.identity=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.body.username?/^[a-zA-Z0-9\-\_]+$/.test(a.body.username)||(c.outcome.errfor.username="only use letters, numbers, '-', '_'"):c.outcome.errfor.username="required",a.body.email?/^[a-zA-Z0-9\-\_\.\+]+@[a-zA-Z0-9\-\_\.]+\.[a-zA-Z0-9\-\_]+$/.test(a.body.email)||(c.outcome.errfor.email="invalid email format"):c.outcome.errfor.email="required",c.hasErrors()?c.emit("response"):void c.emit("duplicateUsernameCheck")}),c.on("duplicateUsernameCheck",function(){a.app.db.models.User.findOne({username:a.body.username,_id:{$ne:a.user.id}},function(a,b){return a?c.emit("exception",a):b?(c.outcome.errfor.username="username already taken",c.emit("response")):void c.emit("duplicateEmailCheck")})}),c.on("duplicateEmailCheck",function(){a.app.db.models.User.findOne({email:a.body.email.toLowerCase(),_id:{$ne:a.user.id}},function(a,b){return a?c.emit("exception",a):b?(c.outcome.errfor.email="email already taken",c.emit("response")):void c.emit("patchUser")})}),c.on("patchUser",function(){var b={username:a.body.username,email:a.body.email.toLowerCase(),search:[a.body.username,a.body.email]},d={select:"username email twitter.id github.id facebook.id google.id"};a.app.db.models.User.findByIdAndUpdate(a.user.id,b,d,function(a,b){return a?c.emit("exception",a):void c.emit("patchAdmin",b)})}),c.on("patchAdmin",function(b){if(b.roles.admin){var d={user:{id:a.user.id,name:b.username}};a.app.db.models.Admin.findByIdAndUpdate(b.roles.admin,d,function(a){return a?c.emit("exception",a):void c.emit("patchAccount",b)})}else c.emit("patchAccount",b)}),c.on("patchAccount",function(b){if(b.roles.account){var d={user:{id:a.user.id,name:b.username}};a.app.db.models.Account.findByIdAndUpdate(b.roles.account,d,function(a){return a?c.emit("exception",a):void c.emit("populateRoles",b)})}else c.emit("populateRoles",b)}),c.on("populateRoles",function(a){a.populate("roles.admin roles.account","name.full",function(a,b){return a?c.emit("exception",a):(c.outcome.user=b,void c.emit("response"))})}),c.emit("validate")},exports.password=function(a,b){var c=a.app.utility.workflow(a,b);c.on("validate",function(){return a.body.newPassword||(c.outcome.errfor.newPassword="required"),a.body.confirm||(c.outcome.errfor.confirm="required"),a.body.newPassword!==a.body.confirm&&c.outcome.errors.push("Passwords do not match."),c.hasErrors()?c.emit("response"):void c.emit("patchUser")}),c.on("patchUser",function(){a.app.db.models.User.encryptPassword(a.body.newPassword,function(b,d){if(b)return c.emit("exception",b);var e={password:d};a.app.db.models.User.findByIdAndUpdate(a.user.id,e,function(a,b){return a?c.emit("exception",a):void b.populate("roles.admin roles.account","name.full",function(a){return a?c.emit("exception",a):(c.outcome.newPassword="",c.outcome.confirm="",void c.emit("response"))})})})}),c.emit("validate")};
//# sourceMappingURL=index%20(2).min.js.map